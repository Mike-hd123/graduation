<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mike.dao.StudentDao">
    <resultMap id="BaseUserMap" type="com.mike.dao.entity.Student">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="school" property="school" jdbcType="VARCHAR" />
        <result column="admission_time" property="admissionTime" jdbcType="VARCHAR" />
        <result column="profession" property="profession" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="grade" property="grade" jdbcType="VARCHAR" />
        <result column="name" property="username" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <insert id="addStudent" parameterType="com.mike.dao.entity.Student">
        INSERT INTO student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">id,</if>
            <if test="realName != null and realName != ''">real_name,</if>
            <if test="school != null and school != ''">school,</if>
            <if test="admissionTime != null and admissionTime != ''">admission_time,</if>
            <if test="profession != null and profession != ''">profession,</if>
            <if test="phone != null and phone != ''">phone,</if>
            <if test="sex != null and sex != ''">sex,</if>
            <if test="grade != null and grade != ''">grade,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">#{id},</if>
            <if test="realName != null and realName != ''">#{realName},</if>
            <if test="school != null and school != ''">#{school},</if>
            <if test="admissionTime != null and admissionTime != ''">#{admissionTime},</if>
            <if test="profession != null and profession != ''">#{profession},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
            <if test="sex != null and sex != ''">#{sex},</if>
            <if test="grade != null and grade != ''">#{grade},</if>
        </trim>
    </insert>
    <delete id="delete" parameterType="map">
        DELETE FROM
         student
        <where>
            id IN
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </where>
    </delete>
    <update id="update" parameterType="com.mike.dao.entity.Student">
        UPDATE student
        <trim prefix="set" suffixOverrides=",">
            <if test="id != null and id != ''">
                id = #{id},
            </if>
            <if test="realName != null and realName != ''">
                real_name = #{realName},
            </if>

            <if test="school != null and school != ''">
                school = #{school},
            </if>
            <if test="admissionTime != null and admissionTime != ''">
                admission_time = #{admissionTime},
            </if>
            <if test="profession != null and profession != ''">
                profession = #{profession},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="grade != null and grade != ''">
                grade = #{grade},
            </if>
        </trim>
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </update>
    <select id="getStudentList" resultMap="BaseUserMap" parameterType="map">
        SELECT
        *,b.disable as state
        FROM student a
        LEFT JOIN
        user b
        ON a.id = b.user
        <where>
            <if test="condition.code != null and condition.code != ''">
                b.name LIKE CONCAT('%',#{condition.code},'%') OR real_name LIKE CONCAT('%',#{condition.code},'%') OR profession LIKE CONCAT('%',#{condition.code},'%')
            </if>
            <if test="condition.profession != null and condition.profession != ''">
                AND profession = #{condition.profession}
            </if>
            <if test="condition.grade != null and condition.grade != ''">
                AND grade = #{condition.grade}
            </if>
        </where>
        ORDER BY a.id DESC
    </select>
    <select id="getStudentTree" resultType="com.mike.dao.entity.Student">
        SELECT
            profession
        FROM student
    </select>
    <select id="getGradeByProfession" resultType="string" parameterType="string">
        SELECT
            grade
        FROM student
        <where>
            <if test="code != null and code != ''">
                AND profession = #{code}
            </if>
        </where>
    </select>
    <select id="checkCodeCount" resultType="int">
        select
            count(0)
        from
            student
        <where>
            <if test="condition.profession != null and condition.profession != ''">
                AND profession = #{condition.profession}
            </if>
            <if test="condition.grade != null and condition.grade != ''">
                AND grade = #{condition.grade}
            </if>
        </where>
    </select>
    <select id="getUserById" resultMap="BaseUserMap" parameterType="string">
        select
        a.*,
        b.type,
        b.name,
        b.email
        FROM student a,user b
        <where>
            a.id = b.user and a.id = #{id}
        </where>
    </select>
    <select id="getStudentById" resultMap="BaseUserMap" parameterType="string">
        SELECT
        *
        FROM student
        <where>
            id = #{id}
        </where>
    </select>
</mapper>