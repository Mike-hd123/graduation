<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mike.dao.ScoreDao">
    <resultMap id="BaseUserMap" type="com.mike.dao.entity.Score">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="credits" property="credits" jdbcType="DECIMAL" />
        <result column="number" property="number" jdbcType="INTEGER" />
        <result column="score" property="score" jdbcType="INTEGER" />
        <result column="year" property="year" jdbcType="INTEGER" />
        <result column="term" property="term" jdbcType="INTEGER" />
        <result column="grade" property="grade" jdbcType="VARCHAR" />
        <result column="profession" property="profession" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="profession" property="profession" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="student_id" property="studentId" jdbcType="VARCHAR" />
        <result column="course_id" property="courseId" jdbcType="VARCHAR" />
        <result column="pointByUser" property="pointByUser" jdbcType="VARCHAR" />
        <result column="creditsByUser" property="creditsByUser" jdbcType="VARCHAR" />
        <result column="scoreByUser" property="scoreByUser" jdbcType="VARCHAR" />
    </resultMap>
    <select id="getScoreByMap" resultMap="BaseUserMap" parameterType="map">
        SELECT
            b.*,
            c.real_name,
            d.course_id,
            c.grade,
            d.student_id,
            d.point as pointByUser,
            d.credits as creditsByUser,
            d.score as scoreByUser
        FROM teach a
        LEFT JOIN course b
        ON a.course_id = b.id
        LEFT JOIN student c
        ON a.profession = c.profession and a.grade = c.grade
        LEFT JOIN score d
        ON c.id = d.student_id and a.name = d.name
        <where>
            <if test="condition.profession != null and condition.profession != ''">
                a.profession = #{condition.profession}
            </if>
            <if test="condition.grade != null and condition.grade != ''">
                AND a.grade = #{condition.grade}
            </if>
            <if test="condition.id != null and condition.id != ''">
                AND a.teacher_id = #{condition.id}
            </if>
            <if test="condition.courseName != null and condition.courseName != ''">
                AND a.name = #{condition.courseName}
            </if>
            <if test="condition.studentId != null and condition.studentId != ''">
                AND d.student_id = #{condition.studentId}
            </if>
        </where>
        ORDER BY c.id
    </select>
    <select id="getScoreByAdmin" resultMap="BaseUserMap" parameterType="map">
        select
            a.id as student_id,
            a.real_name,
            a.admission_time as year,
            a.grade,
            a.profession,
            b.id as course_id,
            b.name,
            b.credits,
            b.score,
            b.number,
            b.term,
            b.type
        FROM
            student a
        Left join course b
        on a.profession = b.profession
        <where>
            <if test="condition.profession != null and condition.profession != ''">
                a.profession = #{condition.profession}
            </if>
            <if test="condition.grade != null and condition.grade != ''">
                AND a.grade = #{condition.grade}
            </if>
            <if test="condition.courseName != null and condition.courseName != ''">
                AND b.name = #{condition.courseName}
            </if>
        </where>
        order by a.id
    </select>

    <select id="getExportListByAdmin" resultMap="BaseUserMap" parameterType="map">
        select
        c.id as id,
        a.id as student_id,
        b.id as course_id,
        a.real_name,
        a.admission_time as year,
        a.grade,
        a.profession,
        b.name,
        b.credits,
        b.score,
        b.number,
        b.term,
        b.type,
        c.point as pointByUser,
        c.credits as creditsByUser,
        c.score as scoreByUser
        FROM
        student a
        Left join course b
        on a.profession = b.profession
        Left join score c
        on b.id = c.course_id
        <where>
            <if test="condition.profession != null and condition.profession != ''">
                a.profession = #{condition.profession}
            </if>
            <if test="condition.grade != null and condition.grade != ''">
                AND a.grade = #{condition.grade}
            </if>
            <if test="condition.courseName != null and condition.courseName != ''">
                AND b.name = #{condition.courseName}
            </if>
        </where>
        order by a.id
    </select>
    <select id="getExportListByStudent" resultMap="BaseUserMap" parameterType="map">
        SELECT
            a.id,
            a.student_id,
            a.course_id,
            a.point as pointByUser,
            a.credits as creditsByUser,
            a.score as scoreByUser,
            b.real_name,
            b.admission_time as year,
            b.grade,
            b.profession,
            c.name,
            c.credits,
            c.score,
            c.number,
            c.term,
            c.type
        FROM
            score a
        LEFT JOIN student b ON a.student_id = b.id
        LEFT JOIN course c on a.name = c.name
        <where>
            <if test="condition.id != null and condition.id != ''">
                AND a.student_id = #{condition.id}
            </if>
            <if test="condition.year != null and condition.year != ''">
                AND a.year = #{condition.year}
            </if>
            <if test="condition.term != null and condition.term != ''">
                AND a.term = #{condition.term}
            </if>
        </where>
        order by a.id
    </select>
    <select id="getScoreByStudent" resultMap="BaseUserMap" parameterType="map">
        SELECT
        a.id,
        a.student_id,
        a.course_id,
        a.point as pointByUser,
        a.credits as creditsByUser,
        a.score as scoreByUser,
        b.real_name,
        b.admission_time as year,
        b.grade,
        b.profession,
        c.name,
        c.credits,
        c.score,
        c.number,
        c.term,
        c.type
        FROM
        score a
        LEFT JOIN student b ON a.student_id = b.id
        LEFT JOIN course c on a.name = c.name
        <where>
            <if test="condition.id != null and condition.id != ''">
                AND a.student_id = #{condition.id}
            </if>
            <if test="condition.year != null and condition.year != ''">
                AND a.year = #{condition.year}
            </if>
            <if test="condition.term != null and condition.term != ''">
                AND a.term = #{condition.term}
            </if>
        </where>
        order by a.id
    </select>
    <select id="getScoreById" resultMap="BaseUserMap" parameterType="map">
        select
            id,
            point as pointByUser,
            credits as creditsByUser,
            score as scoreByUser
        FROM
            score
        <where>
            <if test="condition.id != null and condition.id != ''">
                student_id = #{condition.id}
            </if>
            <if test="condition.courseName != null and condition.courseName != ''">
                AND name = #{condition.courseName}
            </if>
        </where>
    </select>
    <insert id="addEntry" parameterType="com.mike.dao.entity.Score">
        INSERT INTO score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">student_id,</if>
            <if test="name != null and name != ''">`name`,</if>
            <if test="creditsByUser != null and creditsByUser != ''">`credits`,</if>
            <if test="pointByUser != null and pointByUser != ''">`point`,</if>
            <if test="scoreByUser != null and scoreByUser != ''">`score`,</if>
            <if test="year != null and year != ''">`year`,</if>
            <if test="term != null and term != ''">term,</if>
            <if test="courseId != null and courseId != ''">course_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">#{studentId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="creditsByUser != null and creditsByUser != ''">#{creditsByUser},</if>
            <if test="pointByUser != null and pointByUser != ''">#{pointByUser},</if>
            <if test="scoreByUser != null and scoreByUser != ''">#{scoreByUser},</if>
            <if test="year != null and year != ''">#{year},</if>
            <if test="term != null and term != ''">#{term},</if>
            <if test="courseId != null and courseId != ''">#{courseId},</if>
        </trim>
    </insert>
    <update id="updateEntry" parameterType="com.mike.dao.entity.Score">
        UPDATE score
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null and name != ''">
                `name` = #{name},
            </if>
            <if test="creditsByUser != null and creditsByUser != ''">
                credits = #{creditsByUser},
            </if>
            <if test="pointByUser != null and pointByUser != ''">
                point = #{pointByUser},
            </if>
            <if test="scoreByUser != null and scoreByUser != ''">
                score = #{scoreByUser},
            </if>
            <if test="year != null and year != ''">
                `year`= #{year},
            </if>
            <if test="term != null and term != ''">
                term = #{term},
            </if>
        </trim>
        <where>
            <if test="studentId != null and studentId != ''">
                student_id = #{studentId}
            </if>
            <if test="name != null and name != ''">
                AND `name` = #{name}
            </if>
        </where>
    </update>
    <select id="checkCount" resultType="int" parameterType="map">
        select count(0) from score
        <where>
            student_id = #{condition.StudentId}
            AND name = #{condition.ScoreName}
        </where>
    </select>
    <select id="getExportList" resultMap="BaseUserMap" parameterType="map">
        SELECT
        b.*,
        c.real_name,
        d.course_id,
        d.student_id,
        c.grade,
        d.point as pointByUser,
        d.credits as creditsByUser,
        d.score as scoreByUser
        FROM teach a
        LEFT JOIN course b
        ON a.course_id = b.id
        LEFT JOIN student c
        ON a.profession = c.profession and a.grade = c.grade
        LEFT JOIN score d
        ON c.id = d.student_id  and a.name = d.name
        <where>
            <if test="condition.profession != null and condition.profession != ''">
                a.profession = #{condition.profession}
            </if>
            <if test="condition.grade != null and condition.grade != ''">
                AND a.grade = #{condition.grade}
            </if>
            <if test="condition.id != null and condition.id != ''">
                AND a.teacher_id = #{condition.id}
            </if>
            <if test="condition.courseName != null and condition.courseName != ''">
                AND a.name = #{condition.courseName}
            </if>
            <if test="condition.studentId != null and condition.studentId != ''">
                AND d.student_id = #{condition.studentId}
            </if>
        </where>
        ORDER BY c.id
    </select>
    <select id="getStudentTotal" resultMap="BaseUserMap" parameterType="map">
        SELECT
         credits as creditsByUser,
         point as pointByUser
        FROM score
        <where>
            <if test="condition.id != null and condition.id != ''">
                AND student_id = #{condition.id}
            </if>
        </where>
    </select>
</mapper>